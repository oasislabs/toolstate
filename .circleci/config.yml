version: 2.1


executors:
  rust:
    environment:
      PATH: /root/.local/bin:/root/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
      LD_LIBRARY_PATH: /root/.rustup/toolchains/nightly-2019-08-01-x86_64-unknown-linux-gnu/lib
    docker:
      - image: oasislabs/rust:latest

  ubuntu:
    environment:
      PATH: /root/.local/bin:/root/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
      DEBIAN_FRONTEND: noninteractive
    docker:
      - image: ubuntu:18.04

  mac:
    environment:
      PATH: /Users/distiller/.local/bin:/Users/distiller/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
      DYLD_LIBRARY_PATH: /Users/distiller/.rustup/toolchains/nightly-2019-08-01-x86_64-apple-darwin/lib
    macos:
      xcode: 11.0.0


commands:
  run_pipeline:
    steps:
      - checkout
      - run:
          name: Checkstyle
          command: |
            yapf --diff *.py
            pylint *.py
      - run:
          no_output_timeout: 1h
          command: python3 update_toolstate.py

  test_installer:
    steps:
      - checkout
      - run: python2.7 installer.py --speedrun
      - run: python3 installer.py --speedrun --force
      - run: |
          oasis init test_proj
          cd test_proj
          oasis build
          oasis chain &
          oasis test


jobs:
  linux_toolstate:
    executor: rust
    steps:
      - run:
          name: Install dependencies
          command: |
            apt-get install -y nodejs npm python3 python3-pip
            npm install -g yarn
      - run_pipeline

  macos_toolstate:
    executor: mac
    steps:
      - run:
          name: Install dependencies
          command: |
            curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain nightly-2019-08-01
            rustup target add wasm32-wasi
            pip3 install boto3 yapf pylint
      - run_pipeline

  linux_install:
    executor: ubuntu
    steps:
      - run:
          name: Install dependencies
          command: |
            # The ubuntu image is minimal. A dev environment comes with these preinstalled.
            apt-get -qq update
            apt-get -qq install python rsync curl git python3 build-essential
      - test_installer

  macos_install:
    executor: mac
    steps:
      - test_installer


workflows:
  version: 2

  primary:
    jobs:
      - linux_toolstate
      - macos_toolstate
      - linux_install:
          requires:
            - linux_toolstate
      - macos_install:
          requires:
            - macos_toolstate

  nightly:
    triggers:
      - schedule:
          cron: "0 * * * *" # hourly
          filters:
            branches:
              only:
                - master
    jobs:
      - linux_toolstate
      - macos_toolstate
